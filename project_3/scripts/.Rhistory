load_bls()
umdyear <- umd20$year
umdyear <- as.numeric(umdyear)
histo <- hist(umdyear, main="Frequency of Clients/Families Aided by UMD
per Year", ylab="Year", col="light blue")
counts <- histo$counts
blscorr <- data.frame("Clients/Families Aided Per Year" = counts,
"Unemployment Rate (Percent)" = bls_avg$`avg_unemployment`)
bls_avg<-load_bls()
blscorr <- data.frame("Clients/Families Aided Per Year" = counts,
"Unemployment Rate (Percent)" = bls_avg$`avg_unemployment`)
#define UI
ui <- fluidPage(
#App title
titlePanel("Predicting the Number of Clients/Families Aided by UMD Per Year Based on National Unemployment Rate"),
#sidebar layout with input and output definitions
sidebarLayout(
#sidebar panel, input
sidebarPanel(
numericInput("Unemployment.Rate..Percent.", "Unemployment Rate (Percent)", value = 5, min = 0, max = NA, step = NA, width = NULL)
),
#main panel for displaying outputs
mainPanel(
#output: scatter plot
tabsetPanel(type = "tabs",
tabPanel("Model Prediction", textOutput("clients")), # dependent variable (clients aided/yr) output
tabPanel("Scatterplot", plotOutput("blscorr")), # Plot
tabPanel("Model Summary Stats", verbatimTextOutput("summary")) # Regression output
)
)
)
)
#define server logic for making figure
server <- function(input, output) {
# dependent variable (clients aided/yr) output
output$clients <- renderText({
paste('Predicted Number of Clients/Families Aided per Year =', employ(input$Unemployment.Rate..Percent.))
})
# Scatterplot output
output$blscorr <- renderPlot({
ggplot(blscorr, aes(x=Unemployment.Rate..Percent., y=Clients.Families.Aided.Per.Year)) +
geom_point() +
geom_smooth(method = 'lm', se=TRUE, formula=y~x) +
labs(x="Average Unemployment Rate (Percent)", y="Clients/Families Aided Per Year",
title = "Clients/Families Aided per Year vs. National Unemployment")
}, height=400)
# Regression output
output$summary <- renderPrint({
fit <- lm(blscorr$Clients.Families.Aided.Per.Year ~ blscorr$Unemployment.Rate..Percent.)
summary(fit)
})
}
shinyApp(ui = ui, server = server)
traceback()
bls_avg
#app.R
library(tidyverse)
library(tidyr)
library(dplyr)
library(ggplot2)
library(shiny)
library(devtools)
source("helper_functions.R")
#rsconnect::setAccountInfo(name='jesslmurray', token='5CCB97C7AAF85C4C2932DB47530A2B8A', secret='rXMqDS/itm6+4GqDYROWYlwCEmBcVK6QIislFrOG')
#load in the data
#note - I cleaned up the dates and the column for "Type of bill paid" by renaming redundancies in excel with the filter tool
#see helper functions script for description of functions
load_umd()
clean_umd()
umd20 <- clean_umd()
bls_avg<-load_bls()
bls_avg
umdyear <- umd20$year
umdyear <- as.numeric(umdyear)
histo <- hist(umdyear, main="Frequency of Clients/Families Aided by UMD
per Year", ylab="Year", col="light blue")
counts <- histo$counts
blscorr <- data.frame("Clients/Families Aided Per Year" = counts,
"Unemployment Rate (Percent)" = bls_avg$`avg_unemployment`)
#define UI
ui <- fluidPage(
#App title
titlePanel("Predicting the Number of Clients/Families Aided by UMD Per Year Based on National Unemployment Rate"),
#sidebar layout with input and output definitions
sidebarLayout(
#sidebar panel, input
sidebarPanel(
numericInput("Unemployment.Rate..Percent.", "Unemployment Rate (Percent)", value = 5, min = 0, max = NA, step = NA, width = NULL)
),
#main panel for displaying outputs
mainPanel(
#output: scatter plot
tabsetPanel(type = "tabs",
tabPanel("Model Prediction", textOutput("clients")), # dependent variable (clients aided/yr) output
tabPanel("Scatterplot", plotOutput("blscorr")), # Plot
tabPanel("Model Summary Stats", verbatimTextOutput("summary")) # Regression output
)
)
)
)
#define server logic for making figure
server <- function(input, output) {
# dependent variable (clients aided/yr) output
output$clients <- renderText({
paste('Predicted Number of Clients/Families Aided per Year =', employ(input$Unemployment.Rate..Percent.))
})
# Scatterplot output
output$blscorr <- renderPlot({
ggplot(blscorr, aes(x=Unemployment.Rate..Percent., y=Clients.Families.Aided.Per.Year)) +
geom_point() +
geom_smooth(method = 'lm', se=TRUE, formula=y~x) +
labs(x="Average Unemployment Rate (Percent)", y="Clients/Families Aided Per Year",
title = "Clients/Families Aided per Year vs. National Unemployment")
}, height=400)
# Regression output
output$summary <- renderPrint({
fit <- lm(blscorr$Clients.Families.Aided.Per.Year ~ blscorr$Unemployment.Rate..Percent.)
summary(fit)
})
}
shinyApp(ui = ui, server = server)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
install.packages("Hmisc")
library(Hmisc)
#setting the working directory
getwd()
setwd("D:/bios611-projects-fall-2019-JessLMurray/project_3/scripts")
#loading in the data from github and taking a look
client <- read_tsv(url("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/CLIENT_191102.tsv"), na = "**")
View(client)
disable_entry <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/DISABILITY_ENTRY_191102.tsv", na = "**")
View(disable_entry)
disable_exit <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/DISABILITY_EXIT_191102.tsv", na = "**")
View(disable_exit)
ee_reviews <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/EE_REVIEWS_191102.tsv", na = "**")
View(ee_reviews)
ee_udes <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/EE_UDES_191102.tsv", na = "**")
View(ee_udes)
entry_exit <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/ENTRY_EXIT_191102.tsv", na = "**")
View(entry_exit)
healthins_entry <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/HEALTH_INS_ENTRY_191102.tsv", na = "**")
View(healthins_entry)
healthins_exit <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/HEALTH_INS_EXIT_191102.tsv", na = "**")
View(healthins_exit)
income_entry <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/INCOME_ENTRY_191102.tsv", na = "**")
View(income_entry)
income_exit <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/INCOME_EXIT_191102.tsv", na = "**")
View(income_exit)
noncash_entry <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/NONCASH_ENTRY_191102.tsv", na = "**")
View(noncash_entry)
noncash_exit <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/NONCASH_EXIT_191102.tsv", na = "**")
View(noncash_exit)
provider <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/PROVIDER_191102.tsv", na = "**")
View(provider)
spdat_fam <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/VI_SPDAT_FAM_V2_191102.tsv", na = "**")
View(spdat_fam)
spdat_ind <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/VI_SPDAT_IND_V2_191102.tsv", na = "**")
View(spdat_ind)
spdat_v1 <- read_tsv("https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project2_2019/VI_SPDAT_V1_191102.tsv", na = "**")
View(spdat_v1)
#getting descriptive stats on a few variables
agehist = hist(client$'Client Age at Entry',
main = "Histogram of Client Age at Entry",
xlab = "Client Age",
col = "light blue")
summary(client$`Client Age at Entry`)
#Looks like the median age of clients is 46 with a range of 18-81 yo
#seeing if there are differences in age distribution by gender or race
transform(client, 'Client Age at Entry' = as.numeric(as.character('Client Age at Entry')))
class(client$`Client Age at Entry`)
#plotting distribution of age by gender
agebygender = ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender")
ggsave("Age_Distribution_by_Gender.png", height =3, width = 5)
#using lubridate package to get the overall length of stay at UMD
LOS_entrydate = entry_exit$`Entry Date`
entrydate = mdy(entry_exit$`Entry Date`)
View(entrydate)
LOS_exitdate = entry_exit$`Exit Date`
exitdate = mdy(entry_exit$`Exit Date`)
View(exitdate)
len = difftime(exitdate, entrydate, units = "weeks")
len = round(len, digits = 0)
View(len)
length_of_stay = data.frame(len)
#adding back the client ID variable
clientid = entry_exit$`Client Unique ID`
clientid = data.frame(clientid)
ageatentry = client$'Client Age at Entry'
age = data.frame(ageatentry)
LOS = data.frame(clientid, length_of_stay, age)
View(LOS)
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
ggsave("Distribution_LOS_by_Age.png", height=3, width=5)
#plotting length of stay by gender
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`))
View(LOS)
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender") +
xlim(0,50)
LOSbygender
ggsave("LOS_Distribution_by_Gender.png", height =3, width = 5)
#distribution of race
racetable = table(na.omit(client$`Client Primary Race`))
prop.table(racetable)
#72.9% of clients are black or AA, and 24.8% of clients are white. 1.7% of clients are American Indian or Alaskan native.
# re-order levels
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x), decreasing = TRUE)))
}
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
labs(title = "Distribution of Client Race") +
theme(axis.text = element_text(size=4))
racebar
ggsave("Racial_distribution.png", height=3, width=5)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
LOSbw = LOS %>% filter(LOS$client..Client.Primary.Race. %in% c("White (HUD)", "Black or African American (HUD)"))
View(LOSbw)
LOSbyrace = ggplot(LOSbw, aes(x=LOSbw$'len', fill = LOSbw$client..Client.Primary.Race. , color = LOSbw$client..Client.Primary.Race.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Race (Black or White)", x = "Length of Stay (Weeks)", y = "Count", legend = "Race") +
xlim(0,50)
LOSbyrace
ggsave("Length_of_Stay_by_Race.png", height = 3, width = 5)
View(LOS)
summary(LOS$len)
class(LOS$len)
length = as.numeric(LOS$len)
summary(length)
hist(lenth)
hist(length)
View(len_decimal)
len_decimal = difftime(exitdate,entrydate, units = "weeks")
len_decimal = round(len_decimal, digits = 1)
View(len_decimal)
len_decimal = data.frame(len_decimal)
hist(len_decimal)
len_decimal = as.numeric(len_decimal)
hist(len_decimal)
len_decimal = as.numeric(data.frame(len_decimal))
len_decimal = data.frame(len_decimal)
View(len_decimal)
len_decimal = as.numeric(len_decimal)
len_decimal = as.numeric(unlist(len_decimal))
hist(len_decimal)
LOShist = ggplot(client, aes(x=len_decimal, color = "light blue")) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count")
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(alpha = 0.5, color = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count")
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(alpha = 0.5, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count")
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,50)
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,50) +
scale_x_continuous(breaks=seq(0,50,1))
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,50) +
scale_x_continuous(breaks=seq(0,50,5))
LOShist
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,50)
LOShist
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,20) +
scale_x_continuous(breaks=seq(0,20,1))
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,20) +
scale_x_continuous(breaks=seq(0,1))
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,20) +
scale_x_continuous(breaks=seq(0,50,1))
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
LOShistzoom
#adding back the client ID variable
clientid = entry_exit$`Client Unique ID`
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count")
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
scale_x_continuous(0, 20, 1)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
scale_x_continuous(0, 20, 20)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
scale_x_continuous(0, 1, 20)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
scale_x_continuous(0, 20, 5)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
scale_x_continuous(0, 20, 20)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,20)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,5)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,5) +
stat_bin(bins = 50)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,5) +
stat_bin(bins = 25)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,5)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,20)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,50)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,5)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,5.5)
LOShistzoom
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,5)
LOShistzoom
LOShist = ggplot(client, aes(x=len_decimal)) +
geom_histogram(color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay", y = "Count") +
xlim(0,50)
LOShist
ggsave("LOS_Distribution.png", height =3, width = 5)
LOShistzoom = ggplot(client, aes(x=len_decimal)) +
geom_histogram(bins = 25, color = "black", fill = "light blue")+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay (Weeks)", x = "Length of Stay (Weeks)", y = "Count") +
xlim(0,5)
LOShistzoom
ggsave("LOS_Distribution_0-5wks.png", height =3, width = 5)
summary(len_decimal)
summary(length)
summary(len_decimal)
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_histogram() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len)) +
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len)) +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len))) +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len))) +
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len)))) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len)))) +
geom_histogram() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry)) +
geom_histogram() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
#plotting length of stay by age
losage = ggplot(LOS, aes(x=ageatentry, y=as.numeric(unlist(len)))) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
