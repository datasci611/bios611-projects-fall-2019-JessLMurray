View(entry_exit)
entrydate = ymd(LOS_entrydate)
View(entrydate)
#using lubridate package to get the overall length of stay at UMD
LOS_entrydate = entry_exit$`Entry Date`
entrydate = ymd(LOS_entrydate)
View(entrydate)
View(entrydate)
#using lubridate package to get the overall length of stay at UMD
LOS_entrydate = entry_exit$`Entry Date`
View(entrydate)
View(LOS_entrydate)
LOS_exitdate = mdy(LOS_exitdate)
exitdate = mdy(LOS_exitdate)
View(exitdate)
exitdate = mdy(LOS_exitdate)
View(exitdate)
exitdate = mdy(entry_exit$`Exit Date`)
View(exitdate)
#using lubridate package to get the overall length of stay at UMD
LOS_entrydate = entry_exit$`Entry Date`
entrydate = mdy(entry_exit$`Entry Date`)
View(entrydate)
len = difftime(exitdate, entrydate, units = "weeks")
len = round(len, digits = 0)
View(len)
length_of_stay = data.frame(len)
#adding back the client ID variable
clientid = entry_exit$`Client Unique ID`
clientid = data.frame(clientid)
#adding back the client ID variable
clientid = entry_exit$`Client Unique ID`
clientid = data.frame(clientid)
ageatentry = client$'Client Age at Entry'
age = data.frame(ageatentry)
LOS = data.frame(clientid, length_of_stay, age)
View(LOS)
ggplot(LOS, aes(x = ageatentry, y = length_of_stay)) +
geom_point()
ggplot(LOS, aes(x = age, y = length_of_stay)) +
geom_point()
View(LOS)
ggplot(LOS, aes(x = age, y = len)) +
geom_point()
View(LOS)
ggplot(LOS, aes(x = ageatentry, y = len)) +
geom_point()
ggplot(LOS, aes(x = ageatentry, y = len)) +
geom_point() +
geom_jitter()
ggplot(client, aes(x = 'Client Age at Entry', y = 'LOS')) +
geom_hex()
#getting descriptive stats on a few variables
agehist = hist(client$'Client Age at Entry',
main = "Histogram of Client Age at Entry",
xlab = "Client Age",
col = "light blue")
ggsave(agehist, 'Age Distribution.png', height=3, width=5)
#getting descriptive stats on a few variables
agehist = hist(client$'Client Age at Entry',
main = "Histogram of Client Age at Entry",
xlab = "Client Age",
col = "light blue")
summary(client$`Client Age at Entry`)
ggsave(agehist, 'Age Distribution.png', height=3, width=5)
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram(fill = "white", alpha = 0.5, position = "identity")
#seeing if there are differences in age distribution by gender or race
transform(client, 'Client Age at Entry' = as.numeric('Client Age at Entry'))
View(client)
ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram(fill = "white", alpha = 0.5, position = "identity")
#seeing if there are differences in age distribution by gender or race
transform(client, 'Client Age at Entry' = as.numeric('Client Age at Entry'))
View(client)
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram(fill = "white", alpha = 0.5, position = "identity")
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_bar(fill = "white", alpha = 0.5, position = "identity")
#seeing if there are differences in age distribution by gender or race
transform(client, 'Client Age at Entry' = as.numeric(as.character('Client Age at Entry')))
View(client)
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram(fill = "white", alpha = 0.5, position = "identity")
class(client$`Client Age at Entry`)
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram()
#seeing if there are differences in age distribution by gender or race
transform(client, 'Client Age at Entry' = as.numeric(as.character('Client Age at Entry')))
class(client$`Client Age at Entry`)
ggplot(client, aes(x='Client Age at Entry', color = 'Client Gender')) +
geom_histogram()
ggplot(client, aes(x='Client Age at Entry')) +
geom_histogram()
ggplot(client, aes(x=client$'Client Age at Entry')) +
geom_histogram()
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5)
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5, position = "identity")
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5)
summary(client$`Client Gender`)
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5, position = 'dodge')
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram( alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = client$`Client Gender`, alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white"), alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', color = client$`Client Gender`)) +
geom_histogram(fill = "white", alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'top')
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender")
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender")
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender") +
minor.tick(nx = 5)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender") +
minor.tick(nx = 5)
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender") +
minor.tick(nx = 5, ny = 100, tick.ratio = 5)
ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender") +
minor.tick(nx = 5, ny = 100, tick.ratio = 1)
agebygender = ggplot(client, aes(x=client$'Client Age at Entry', fill = client$`Client Gender`, color = client$`Client Gender`)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Age by Gender", x = "Client Age at Entry", y = "Count", legend = "Gender")
ggsave(agebygender, "Age Distribution by Gender.png", height =3, width = 5)
ggsave(agebygender, "Age_Distribution_by_Gender.png", height =3, width = 5)
ggsave("Age_Distribution_by_Gender.png", height =3, width = 5)
View(LOS)
LOS = ggplot(LOS, aes(x=len, y=ageatentry)) +
geom_point()
LOS = ggplot(LOS, aes(x=len, y=ageatentry)) +
geom_point()
LOS = ggplot(LOS, aes(x=as.numeric(LOS$len), y=as.numeric(LOS$ageatentry))) +
geom_point()
View(LOS)
LOS = data.frame(clientid, length_of_stay, age)
View(LOS)
LOS = ggplot(LOS, aes(x=LOS$len, y=geatentry)) +
geom_point()
LOS = ggplot(LOS, aes(x=LOS$len, y=geatentry)) +
geom_point()
LOS = ggplot(LOS, aes(x=len, y=geatentry)) +
geom_point()
View(LOS)
LOS = data.frame(clientid, length_of_stay, age)
View(LOS)
LOS = ggplot(LOS, aes(x=len, y=geatentry)) +
geom_point()
View(LOS)
LOS = data.frame(clientid, length_of_stay, age)
View(LOS)
losage = ggplot(LOS, aes(x=len, y=ageatentry)) +
geom_point()
losage = ggplot(LOS, aes(x=len, y=ageatentry)) +
geom_point()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_histogram()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_bara()
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_bar()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_smooth()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_point() +
geom_smooth()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_point() +
geom_smooth() +
geom_jitter()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_point(alpha = 0.5) +
geom_smooth() +
geom_jitter()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex(alpha = 0.5) +
geom_smooth() +
geom_jitter()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex() +
geom_jitter()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex()
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry", y = "Length of Stay (Weeks)")
losage
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
ggsave(losage, "Distribution_LOS_by_Age.png", height=3, width=5)
losage = ggplot(LOS, aes(x=ageatentry, y=len)) +
geom_hex() +
labs(title = "Distribution of Length of Stay by Age", x = "Client Age at Entry (y)", y = "Length of Stay (Weeks)")
losage
ggsave("Distribution_LOS_by_Age.png", height=3, width=5)
#plotting length of stay by gender
LOS = data.frame(clientid, length_of_stay, age, client$`Client Gender`)
View(LOS)
LOSbygender = ggplot(client, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
View(LOS)
LOSbygender = ggplot(client, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender., drop = TRUE)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(na.omit(LOS), aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = na.omit(LOS$client..Client.Gender.) , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = na.omit(LOS$client..Client.Gender.) , color = na.omit(LOS$client..Client.Gender.))) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = na.omit(LOS$client..Client.Gender.))) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
#plotting length of stay by gender
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`))
View(LOS)
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender")
LOSbygender
LOSbygender = ggplot(LOS, aes(x=LOS$'len', fill = LOS$client..Client.Gender. , color = LOS$client..Client.Gender.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Gender", x = "Length of Stay (Weeks)", y = "Count", legend = "Gender") +
xlim(0,50)
LOSbygender
ggsave("Age_Distribution_by_Gender.png", height =3, width = 5)
ggsave("LOS_Distribution_by_Gender.png", height =3, width = 5)
#distribution of race
View(client)
#distribution of race
hist(client$`Client Primary Race`)
#distribution of race
barplot(client$`Client Primary Race`)
#distribution of race
barplot(client$`Client Primary Race`)
#distribution of race
table(client$`Client Primary Race`)
#distribution of race
table(client$`Client Primary Race`)
#distribution of race
table(client$`Client Primary Race`)
#distribution of race
racetable = table(client$`Client Primary Race`)
prop.table(racetable)
prop.table(racetable)
prop.table(racetable)
ggplot(client, aes(x = `Client Primary Race`)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(client, aes(x = reorder_size(`Client Primary Race`))) +
geom_bar() +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# re-order levels
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x), decreasing = TRUE)))
}
ggplot(client, aes(x = reorder_size(`Client Primary Race`))) +
geom_bar() +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar() +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar() +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`), color= "light blue")) +
geom_bar() +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "light blue") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(classic)
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(clean)
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1))
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
labs(title = "Distribution of Client Race")
racebar
ggsave("Racial_distribution.png", height=3, width=5)
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
scale_y_continuous(labels = scales::percent, name = "Proportion") +
labs(title = "Distribution of Client Race")
racebar
library(scales)
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
scale_y_continuous(labels = scales::percent, name = "Proportion") +
labs(title = "Distribution of Client Race")
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
labs(title = "Distribution of Client Race")
racebar
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
labs(title = "Distribution of Client Race") +
theme(axis.text = element_text(size=8))
racebar
ggsave("Racial_distribution.png", height=3, width=5)
racebar = ggplot(na.omit(client), aes(x = reorder_size(`Client Primary Race`))) +
geom_bar(fill = "salmon") +
xlab("Client Primary Race") +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
labs(title = "Distribution of Client Race") +
theme(axis.text = element_text(size=4))
racebar
ggsave("Racial_distribution.png", height=3, width=5)
prop.table(racetable)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`)
View(LOS)
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
LOS1 = LOS[LOS$client..Client.Primary.Race. = 'Native American or Alaska Native (HUD)' & LOS$client..Client.Primary.Race. = " " & LOS$client..Client.Primary.Race. = "Client doesn't know (HUD)" & LOS$client..Client.Primary.Race. = "Asian (HUD)" & LOS$client..Client.Primary.Race. = "Client refused (HUD)"& LOS$client..Client.Primary.Race. = "Data not collected (HUD)" & LOS$client..Client.Primary.Race. ="Native Hawaiian or Other Pacific Islander (HUD)"]
LOS1 = LOS[LOS$client..Client.Primary.Race. = 'Native American or Alaska Native (HUD)', ]
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
#distribution of race
racetable = table(na.omit(client$`Client Primary Race`))
prop.table(racetable)
#i want to see if there is a racial difference in length of stay. since the vast majority of clients are black or white, i will remove clients who are not black or white so i can more easily visualize racial differences
LOS = na.omit(data.frame(clientid, length_of_stay, age, client$`Client Gender`, client$`Client Primary Race`))
View(LOS)
LOSbw = LOS %>% filter(LOS$client..Client.Primary.Race. %in% c("White (HUD)", "Black or African American (HUD)"))
View(LOSbw)
LOSbyrace = ggplot(LOSbw, aes(x=LOS$'len', fill = LOSbw$client..Client.Primary.Race. , color = LOS$client..Client.Primary.Race.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
labs(title = "Distribution of Length of Stay by Race (Black or White)", x = "Length of Stay (Weeks)", y = "Count", legend = "Race") +
xlim(0,50)
LOSbyrace
LOSbyrace = ggplot(LOSbw, aes(x=LOS$'len', fill = LOSbw$client..Client.Primary.Race. , color = LOSbw$client..Client.Primary.Race.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
labs(title = "Distribution of Length of Stay by Race (Black or White)", x = "Length of Stay (Weeks)", y = "Count", legend = "Race") +
xlim(0,50)
LOSbyrace
LOSbyrace = ggplot(LOSbw, aes(x=LOSbw$'len', fill = LOSbw$client..Client.Primary.Race. , color = LOSbw$client..Client.Primary.Race.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
labs(title = "Distribution of Length of Stay by Race (Black or White)", x = "Length of Stay (Weeks)", y = "Count", legend = "Race") +
xlim(0,50)
LOSbyrace
LOSbyrace = ggplot(LOSbw, aes(x=LOSbw$'len', fill = LOSbw$client..Client.Primary.Race. , color = LOSbw$client..Client.Primary.Race.)) +
geom_histogram(alpha = 0.5, position = 'dodge')+
theme(legend.position = 'bottom')+
theme(legend.title = element_blank())+
labs(title = "Distribution of Length of Stay by Race (Black or White)", x = "Length of Stay (Weeks)", y = "Count", legend = "Race") +
xlim(0,50)
LOSbyrace
ggsave("Length_of_Stay_by_Race.png", height = 3, width = 5)
